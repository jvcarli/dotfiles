# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
# skhd config. macos version of sxkhd for linux
# Hyper key = Caps lock (shift + ctrl + atl + command)
# Left command is mapped to: ctrl + alt

#: Yabai {{{

#: Blacklisted apps {{{

# Blacklist example
#.blacklist [
#    "terminal"
#    "kitty"
#]

#: }}}

#: Reload yabai {{{

# Reload yabai homebrew service
#shift + ctrl + alt - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"
# For some reason the command above gives a status error
# when yabai service reloads
# Calling `brew services` directly is a little bit slowly
# but solves this issue
shift + ctrl + alt - r : brew services restart yabai 

#:}}}

#: Windows control {{{

# focus window
ctrl + alt - h : yabai -m window --focus west
ctrl + alt - j : yabai -m window --focus south
ctrl + alt - k : yabai -m window --focus north
ctrl + alt - l : yabai -m window --focus east

# Swap windows one with each other
shift + ctrl + alt - h : yabai -m window --swap west
shift + ctrl + alt - j : yabai -m window --swap south
shift + ctrl + alt - k : yabai -m window --swap north
shift + ctrl + alt - l : yabai -m window --swap east

# move window warping it in the space of the other
# e.g.: one window doesn't switch with each other
# instead they start to share the space (divide)
# of the target window
#shift + alt - h : yabai -m window --warp west
#shift + alt - j : yabai -m window --warp south
#shift + alt - k : yabai -m window --warp north
#shift + alt - l : yabai -m window --warp east


#: }}}

#: TODO: configure the section below {{{

# make floating window fill screen
shift + ctrl + alt - up : yabai -m window --grid 1:1:0:0:1:1

# create desktop, move window and follow focus
#shift + cmd - n : yabai -m space --create;\
#                  id=$(yabai -m query --displays --display | grep "spaces");\
#                  yabai -m window --space $(echo ${id:10:${#id}-10});\
#                  yabai -m space --focus $(echo ${id:10:${#id}-10})

# create desktop and follow focus
ctrl + alt - m : yabai -m space --create;\
                 n_spaces=$(yabai -m query --displays --display | jq -r '.spaces' | grep -Eo '[0-9]+$');\
                 yabai -m space --focus $n_spaces

# create desktop, move window and follow focus
shift + ctrl + alt - m : yabai -m space --create;\
        n_spaces=$(yabai -m query --displays --display | jq -r '.spaces' | grep -Eo '[0-9]+$');\
			  yabai -m window --space $n_spaces;\
        yabai -m space --focus $n_spaces

# destroy desktop
ctrl + alt - n : yabai -m space --destroy;\
        n_spaces=$(yabai -m query --displays --display | jq -r '.spaces' | grep -Eo '[0-9]+$');\
				yabai -m space --focus $n_spaces
#       current_id=$(yabai -m query --spaces --space | jq -r '.index')

# layers

cmd + alt - down : yabai -m window --layer below
cmd + alt - up : yabai -m window --layer above
# TODO: find out what below layer is about
#alt - n : yabai -m window --layer normal

#: }}}

#: Fast focus desktop {{{

# Prev and Next spaces
ctrl + alt - u : yabai -m space --focus prev
ctrl + alt - i : yabai -m space --focus next

# Spaces 1 to 10
ctrl + alt - 1 : yabai -m space --focus 1
ctrl + alt - 2 : yabai -m space --focus 2
ctrl + alt - 3 : yabai -m space --focus 3
ctrl + alt - 4 : yabai -m space --focus 4
ctrl + alt - 5 : yabai -m space --focus 5
ctrl + alt - 6 : yabai -m space --focus 6
ctrl + alt - 7 : yabai -m space --focus 7
ctrl + alt - 8 : yabai -m space --focus 8
ctrl + alt - 9 : yabai -m space --focus 9
ctrl + alt - 0 : yabai -m space --focus 10

#: }}}

#: Send window to desktop and follow focus {{{

# Send to Prev and Next spaces
shift + ctrl + alt - u : yabai -m window --space prev; yabai -m space --focus prev
shift + ctrl + alt - i : yabai -m window --space next; yabai -m space --focus next

# Send to specific spaces
shift + ctrl + alt - 1 : yabai -m window --space  1; yabai -m space --focus 1
shift + ctrl + alt - 2 : yabai -m window --space  2; yabai -m space --focus 2
shift + ctrl + alt - 3 : yabai -m window --space  3; yabai -m space --focus 3
shift + ctrl + alt - 4 : yabai -m window --space  4; yabai -m space --focus 4
shift + ctrl + alt - 5 : yabai -m window --space  5; yabai -m space --focus 5
shift + ctrl + alt - 6 : yabai -m window --space  6; yabai -m space --focus 6
shift + ctrl + alt - 7 : yabai -m window --space  7; yabai -m space --focus 7
shift + ctrl + alt - 8 : yabai -m window --space  8; yabai -m space --focus 8
shift + ctrl + alt - 9 : yabai -m window --space  9; yabai -m space --focus 9
shift + ctrl + alt - 0 : yabai -m window --space 10; yabai -m space --focus 10

#: }}}

#: Focus monitor {{{

# focus monitor
#ctrl + alt - o  : yabai -m display --focus last
ctrl + alt - o  : yabai -m display --focus prev
ctrl + alt - p  : yabai -m display --focus next
#ctrl + alt - 1  : yabai -m display --focus 1
#ctrl + alt - 2  : yabai -m display --focus 2
#ctrl + alt - 3  : yabai -m display --focus 3

# send windows to / focus monitor
shift + ctrl + alt - o  : yabai -m window --display prev ; yabai -m display --focus prev 
shift + ctrl + alt - p  : yabai -m window --display next ; yabai -m display --focus next


#: }}}

#: Windows Positioning {{{

#: Send window to monitor and follow focus {{{

# send window to monitor and follow focus
ctrl + cmd - z  : yabai -m window --display prev; yabai -m display --focus prev
ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1
ctrl + cmd - 2  : yabai -m window --display 2; yabai -m display --focus 2
ctrl + cmd - 3  : yabai -m window --display 3; yabai -m display --focus 3

#: }}}

# TODO: learn how it works - {move window}
shift + ctrl - a : yabai -m window --move -20:0
shift + ctrl - s : yabai -m window --move 0:20
shift + ctrl - w : yabai -m window --move 0:-20
shift + ctrl - d : yabai -m window --move 20:0

# mirror tree y-axis
ctrl + alt - y : yabai -m space --mirror y-axis
# mirror tree x-axis
ctrl + alt - x : yabai -m space --mirror x-axis

# toggle desktop padding / offset
ctrl + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# toggle window parent zoom
shift + ctrl + alt - f : yabai -m window --toggle zoom-parent
# toggle window fullscreen zoom
ctrl + alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window border
ctrl + alt - b : yabai -m window --toggle border

# toggle window split type
ctrl + alt - s : yabai -m window --toggle split

#: unused {{{
# increase size
#shift + alt - i : yabai -m window --resize top_left:-20:-20; \
#                  yabai -m window --resize bottom_right:20:20

#  decrease size
#shift + cmd - i : yabai -m window --resize top_left:20:20; \
#                  yabai -m window --resize bottom_right:-20:-20

# toggle window native fullscreen
#ctrl + alt - f : yabai -m window --toggle native-fullscreen

# set insertion point in focused container
# see: https://github.com/koekeishiya/yabai/issues/855
shift + alt - h : yabai -m window --insert west
shift + alt - j : yabai -m window --insert south
shift + alt - k : yabai -m window --insert north
shift + alt - l : yabai -m window --insert east

# rotate tree -- conflicts with kitty terminal rename tab
#alt - r : yabai -m space --rotate 90
# float / unfloat window and center on screen
#alt - t : yabai -m window --toggle float;\
#          yabai -m window --grid 5:5:1:1:3:3

# toggle sticky
ctrl + alt - v : yabai -m window --toggle sticky

# toggle sticky, float and resize to picture-in-picture size
#alt - p : yabai -m window --toggle sticky;\
#          yabai -m window --grid 5:3:4:0:2:2;\
#          yabai -m window --toggle topmost;\
#          yabai -m window --toggle border;\
#          yabai -m window --toggle pip


#: }}}

#: Change layout of desktop {{{

# change layout of desktop
shift + ctrl + alt - space : yabai -m space --layout bsp
ctrl + alt - space : yabai -m space --layout float

#: }}}

#: Yabai modes {{{

#: Resize {{{

# defines a new mode 'resize' on_enter command, that captures keypresses
:: resize @ : echo 'Entered yabai resize mode'

# from 'default' mode, activate mode 'yabai-resize'
ctrl + alt - r ; resize
# from 'yabai-resize' mode, activate mode 'default'
resize < ctrl + alt - r ; default
resize < escape ; default

resize < h : yabai -m window --resize left:-20:0
resize < j : yabai -m window --resize bottom:0:20
resize < k : yabai -m window --resize top:0:-20
resize < l : yabai -m window --resize right:20:0

# reverse
resize < shift - h : yabai -m window --resize left:20:0
resize < shift - j : yabai -m window --resize bottom:0:-20
resize < shift - k : yabai -m window --resize top:0:20
resize < shift - l : yabai -m window --resize right:-20:0

# balance size of windows
resize < o : yabai -m space --balance
#:}}}

#: }}}

#: }}}

#: App launcher Mode {{{

# iTerm2 terminal
# Both commands are working, "open -na iTerm" is just a fallback option

shift + ctrl + alt - return : osascript -e 'tell application "iTerm2" to create window with default profile command ""' || open -na iTerm

# Kitty terminal
#ctrl + alt - return : kitty --single-instance --directory ~/Projects
# Opens single instance of kitty in ~/Projects directory
ctrl + alt - return : kitty --directory ~/Projects

#: }}}

#: Other modes - NON USED {{{
# OBS: Modes have a great ammount of delay,
# for arrow keys and vim like keybinding
# use either HammerSpoon or Karabiner Elements

#: }}}
