#!/usr/bin/env bash
# vim:fileencoding=utf-8:ft=sh:foldmethod=marker

# Yadm bootstrap file

#: {{{ Variables

SYSTEM_TYPE=$(uname -s) # Valid for UNIX / UNIX like systems

MACOS_VERSION=$(sw_vers -productVersion) # gets macOS version number
MACOS_MOJAVE_BOOTS="$HOME/.config/yadm/macos/mojave_bootstrap"
MACOS_BIGSUR_BOOTS="$HOME/.config/yadm/macos/bigsur_bootstrap"

#: }}}

#: {{{ Functions

install_brew() {

	echo "Detecting if Homebrew package manager is already installed"
	if ! command -v brew &>/dev/null; then
		echo "Homebrew is NOT installed"
		echo "Installing Homebrew Package Manager..."
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	else
		echo -e "Homebrew is already installed.\n"
	fi

}

install_yadm() {

	if ! command -v yadm &>/dev/null; then
		echo "Yadm is NOT installed"
		echo "Installing yadm (Yet Another Dotfile Manager)..."
		brew install yadm
	else
		echo -e "Yadm is already installed.\n"
	fi
}

# Confirm bootstraping action
# Accepts bootstrap file location as function argument
ask_confirmation() {

	# Defining local parameter for argument
	local boostrap_file=$1

	while true; do
		read -p "Do you wish to run bootstrap files? (y/n): " yn
		case $yn in
		[Yy]*)
			install_brew
			install_yadm
			bash "$boostrap_file"
			break
			;;
		[Nn]*)
			echo "Aborting..."
			break
			;;
		*) echo "Please answer yes or no." ;;
		esac
	done

}

#: }}}

# If system type is Darwin (macOS)
if [ "$SYSTEM_TYPE" = "Darwin" ]; then
	echo "Detected system type: $SYSTEM_TYPE"
	echo "Detected macOS version: $MACOS_VERSION"

	# If version name contains 14
	if [[ "$MACOS_VERSION" == *"14"* ]]; then
		echo -e "System name: macOS Mojave\n"
		# Boostrapping macOS Mojave
		ask_confirmation "$MACOS_MOJAVE_BOOTS"

    # If version mame starts with 11
    elif [[ "$MACOS_VERSION" == 11* ]]; then
		echo -e "System name: macOS Big Sur\n"
		# Boostrapping macOS Big Sur
		ask_confirmation "$MACOS_BIGSUR_BOOTS"

	else
		echo "There aren't any bootstrap files for this macOS version"
	fi
fi

# TODO: add tmux symlinking
# TODO: add lazygit symlinking from ~/.config/lazygit/config.yml ~/Library/Application Support/lazygit/config.yml
# lazygit doesn't config from ~/.config/lazygit/config.yml by default. Can this be changed?
