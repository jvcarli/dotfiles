#!/usr/bin/env bash
# vim:fileencoding=utf-8:ft=bash:foldmethod=marker

# MACOS BIG SUR BOOTSTRAPING

# TODO: rearragenge order on Brewfile
# TODO: create function for dealing with Brewfile.lock.json
# virtualbox and bluestacks should come in the end

#: Variables {{{

# Directories
dir_config="$HOME/.config"

# Files
file_brewfile="$HOME/.config/brew/Brewfile"

#: }}}

#: Functions {{{

#: Installation {{{

#: Apple xcode cli tools {{{

# install xcodetools if they aren't installed yet
install_xcodetools() {

	echo "Checking if Xcode command line tools are installed..."
	if [[ $(
		xcode-select -p 1>/dev/null
		echo $?
	) == 2 ]]; then
		echo -e "Installing Apple Command Line Tools... \n"
		xcode-select --install
	else
		echo -e "Xcode command line tools are already installed. \n"
	fi

}

#: }}}

#: Homebrew {{{

# detect and install homebrew if it isn't installed yet
install_brew() {

	echo "Detecting if Homebrew package manager is already installed"
	if ! command -v brew &>/dev/null; then
		echo "Homebrew is NOT installed"
		echo "Installing Homebrew Package Manager..."
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	else
		echo -e "Homebrew is already installed.\n"
	fi

}

# install packages, cli tools and gui apps from brewfile
install_brewfile() {

	echo "Installing / Upgrading applications and cli tools from Brewfile"
	# Updating brew
	brew update
	# Upgrading packages
	brew upgrade
	# Brewfile path: $file_brewfile
	brew bundle --file $file_brewfile

}

#: }}}

#: asdf-vm {{{

# install asdf plugins
install_asdf_plugins() {

	echo -e "\nInstalling asdf-vm plugins"
	# Ruby
	asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git
	# Python
	asdf plugin-add python
	# Nodejs

}

# install asdf languages
install_asdf_langs() {

	echo -e "\nInstalling programming languages with asdf-vm"

	# Python
	asdf install python 2.7.18 # Latest python 2 version. EOL jan/2020
	# python 3.5.1 install is not working
	asdf install python 3.8.8
	asdf install python 3.9.2 # Latest python 3 stable

	# Ruby
	asdf install ruby 2.7.2 # Latest ruby stable

	# Nodejs
	asdf install nodejs 12.18.1 # latest LTS version that supports gitbook

}

#: }}}

#: Tmux  {{{
# tmux_resurrect
create_tmux_ressurect_dir() {
	RESURRECTDIR="$HOME/.local/share/tmux/tmux-resurrect"
	echo "Creating Tmux Ressurect directory"
	mkdir -p $RESURRECTDIR
}
#: }}}

#: }}}

#: Fixes {{{

# Fixing zsh insecurity (due to homebrew autocompletion)
# See: https://www.wezm.net/technical/2008/09/zsh-cygwin-and-insecure-directories/
# See: https://stackoverflow.com/questions/13762280/zsh-compinit-insecure-directories
# See: https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh
# zsh compinit: insecure directories, run compaudit for list.
# Ignore insecure directories and continue [y] or abort compinit [n]?

fix_insecure_dir() {
	#compaudit | xargs chmod g-w  # Deprecated in favor of oficial brew command below
	chmod -R go-w "$(brew --prefix)/share"
	# TODO: compinit command does not work inside bash
	# it must be evoked within zsh
	# and compinit must be autoloaded before running compinit
	#autoload -Uz compinit && compinit

	#rm -f ~/.zcompdump; compinit
}

# zsh compinit: insecure directories, run compaudit for list.

#: }}}

#: Symlinks and folder arrangment {{{

detect_dotconfig() {

	echo "Detecting the presence of $HOME/.config..."

	if [ ! -d "$dir_config" ]; then
		echo "$dir_config does not exist."
		echo -e "Making $dir_config directory \n"
		mkdir $test
	else
		echo -e "$dir_config already exists \n"
	fi

}

# Symlink the files and folders from the argument of the function
# to $HOME/.config

symlink_file_dir() {

	echo "Detecting if config files are already sylinked..."
	local f=$1
	for entry in "$f"/*; do
		ln -s $entry $HOME/.config
	done
	echo ""

}

#: }}}

#: }}}

#: Install {{{
# Install gui apps and cli tools.
# Add config files and symlink necessary files

# Welcome message
echo -e "\nStarting bootstrapping for macOS Big Sur...\n"

# Detecting if $HOME/.config folder exists if not create it
detect_dotconfig

# Checking if xcodetools are installed. If not install them.
install_xcodetools

# Install homebrew if not found
install_brew

# Upgrading homebrew / installing and upgrading apps from Brewfile
# It'll be executed every time this script is run
install_brewfile

# asdf-vm
# Install asdf plugins if they are not found
install_asdf_plugins
# Install programming languages using asdf if they aren't found
#install_asdf_langs

#Tmux
create_tmux_ressurect_dir

# System & apps configs
# Trigger other scripts

#: }}}
